
from hexbytes import HexBytes
import rlp
# 001
node = "0xf90191a0891757929ce116380174486268097769a2f30291732dd18582327788cd95250580a07c2a362d8127b83cbadc4363ff461ee6d72cbefc9a03e6080b739ca340d2860b80a08dad12008136bbe56bc544d8c6711b5c5a594e0f7bfd9a1851355f1fc199e131a0be512df0fee45c716a3ab87e2dffb2072ebaf0dc7f69784e6e7c7b0fae92841ca046b0b0ee9c8e7f0c37a5b8763280abf0c7e47caeb2ab4ff93f0c67fe26c8ad2ba0815bd660bd5e85681a9adab43e0a651e807ba5132f94bd210e9457ba055d538280a0663e186f98fff71d728118b5f788fa72506a4bd6e85aa2915b8ae40059f4ab86a092ef150745b4207ac88519318bd7bb007fe6157e719d459edf5b59f025fe16fda0236e8f61ecde6abfebc6c529441f782f62469d8a2cc47b7aace2c136bd3b1ff0a0d1a0d264eaf005589a3f1486b1dc51909c782272c969c6fcf362b122baf6d188a0303876dcca400618ab14b9d5ff6416ebfde7cd05bd17fd78cab31d79c2759187a0b3a005a4dd06158b44eea4bbfbcdadd5fab5f15f3fe59fe87a9da80ec08552908080"
# 0x3468288056310c82aa4c01a7e12a10f8111a0560e72b700555479031b86c357d

def TransIntoHex(nodelist):
    decodelist = []
    for node in nodelist:
        if isinstance(node, list):
            decodelist.append(TransIntoHex(node))
        elif isinstance(node, bytes):
            decodelist.append(HexBytes(node).hex())
        else:
            raise TypeError("node must be str or list, But %s." % node.__name__)
    return decodelist


if __name__ == "__main__":
    print(TransIntoHex(rlp.decode(HexBytes(node))))
# "0xf85180a09693613f08405421d422bd34d446848ee8a273a5f14359253822fe0136ff311a80808080808080a07d6f4330fe49d8fb3b64a5ab5461426420c639eaab41f2210e4acbfcc571400d80808080808080"
# "0xf85180a09693613f08405421d422bd34d446848ee8a273a5f14359253822fe0136ff311a80808080808080a07d6f4330fe49d8fb3b64a5ab5461426420c639eaab41f2210e4acbfcc571400d80808080808080", "0xf843a0200e4e770828ddbf7f7b00ab00a9f6adaf81c0dc9cc85f1f8249c256942d61d9a1a03302d01af60867a9dbe386260c38cb3fb8efe84f7d1ac049372d42857d1a7124